name: 'Container Image Syncer'
description: 'Sync container images from any public registry to GitHub Container Registry (ghcr.io)'
author: 'ODearEvanHansen'
branding:
  icon: 'refresh-cw'
  color: 'blue'

inputs:
  source_image:
    description: 'Source container image to sync (e.g., nginx:latest, ubuntu:20.04)'
    required: true
  target_org:
    description: 'Target organization in GHCR (default: current repository owner)'
    required: false
  github_token:
    description: 'GitHub token for GHCR authentication'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
        cache: false

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github_token }}
        
    # Set GITHUB_ACTOR environment variable explicitly
    - name: Set GITHUB_ACTOR and debug environment
      shell: bash
      run: |
        echo "GITHUB_ACTOR=${{ github.actor }}" >> $GITHUB_ENV
        echo "Current directory: $(pwd)"
        ls -la
        echo "Go version: $(go version)"

    - name: Build image-syncer
      shell: bash
      run: |
        cd ${{ github.action_path }}
        
        # Initialize go module if it doesn't exist
        if [ ! -f go.mod ]; then
          go mod init github.com/${{ github.repository }}
        fi
        
        # Download dependencies
        go mod tidy
        
        # Build the binary
        go build -o image-syncer ./cmd/image-syncer

    - name: Sync image
      shell: bash
      run: |
        cd ${{ github.action_path }}
        TARGET_ORG="${{ inputs.target_org }}"
        if [ -z "$TARGET_ORG" ]; then
          TARGET_ORG="${{ github.repository_owner }}"
        fi
        
        ./image-syncer \
          -source "${{ inputs.source_image }}" \
          -target-org "$TARGET_ORG" \
          -token "${{ inputs.github_token }}"